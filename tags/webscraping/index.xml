<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Webscraping on typdef's Blog</title><link>http://datdhruv.github.io/tags/webscraping/</link><description>Recent content in Webscraping on typdef's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 05 Jul 2023 12:00:00 +0400</lastBuildDate><atom:link href="http://datdhruv.github.io/tags/webscraping/index.xml" rel="self" type="application/rss+xml"/><item><title>Notes on making a Web Scraper in Java</title><link>http://datdhruv.github.io/posts/misc/java-webscraping/</link><pubDate>Wed, 05 Jul 2023 12:00:00 +0400</pubDate><guid>http://datdhruv.github.io/posts/misc/java-webscraping/</guid><description>First things first. A Web Request Library Before we can start to scrape anything, we will need a way to send and receive web requests. There are multiple ways to do this in java with various libraries, however we will use java.net.http.HttpClient which was released with java 11.
Let&amp;rsquo;s create a simple request:
package org.datdhruv; import java.io.IOException; import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; public class Main { public static void main(String[] args) throws IOException, InterruptedException { var client = HttpClient.</description></item></channel></rss>