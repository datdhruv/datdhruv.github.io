<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ssh on typdef's Blog</title><link>http://typdef.com/tags/ssh/</link><description>Recent content in Ssh on typdef's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 02 Oct 2023 18:30:00 +0400</lastBuildDate><atom:link href="http://typdef.com/tags/ssh/index.xml" rel="self" type="application/rss+xml"/><item><title>Why SSH port Forwarding gives you superpowers</title><link>http://typdef.com/posts/ssh/ssh-port-forwarding/</link><pubDate>Wed, 19 May 2021 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/ssh/ssh-port-forwarding/</guid><description>What is Port Forwarding? Port Forwarding allows you to make a port on a computer behave like it is part of some other computer.
Say you are running a website on a computer A, on localhost:8080, you can forward this port to another computer B and then any connection to computer-B:8080 will be tunneled back to computer A.
This was an example of local port forwarding.
You can go the other way round as well, having a website run on computer-B:8080 and tunnel it to the Computer A.</description></item><item><title>Bashrc customizations</title><link>http://typdef.com/posts/cli/bashrc/</link><pubDate>Wed, 01 Mar 2023 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/cli/bashrc/</guid><description>Bash Prompt PS1=$&amp;#39;\[\e[0;1;38;5;111m\]\w \[\e[$(($?==0?92:91))m\]$ \[\e[0m\]&amp;#39; or with a right arrow for supported nerd fonts:
PS1=$&amp;#39;\[\e[0;1;38;5;111m\]\w \[\e[$(($?==0?92:91))m\]\u279c \[\e[0m\]&amp;#39; Directory from home uses a if-else ternary expression $(($?==0?92:91)) that makes the color code 0;91m (red, see color codes) if the last command exits with non-zero, or 0;92m green otherwise. $ prompt Case insensitive autocompletion In order to make bash case-insensitive for to current user:
Run the following shell script in a terminal:</description></item><item><title>Running oneoff process in the background over ssh</title><link>http://typdef.com/posts/linux/running-procs-bg/</link><pubDate>Mon, 02 Oct 2023 18:30:00 +0400</pubDate><guid>http://typdef.com/posts/linux/running-procs-bg/</guid><description>Imagine a situation where you need to download a large file from the internet to a remote server.
You run curl https://download.com -o download and logout of the ssh server. Big mistake! you come back hours later just to see that the download ended as soon as you logged out.
The nohup command helps here. nohup stands for no hold up, and will run the command without any external interruptions. you can further run the command in the background using &amp;amp;.</description></item><item><title>Useful Shell Shortcuts</title><link>http://typdef.com/posts/cli/bash-shell-shortcuts/</link><pubDate>Wed, 26 Oct 2022 12:30:00 +0400</pubDate><guid>http://typdef.com/posts/cli/bash-shell-shortcuts/</guid><description>Key Binding Description ESC f, ESC b Go forward/backword one word CTRL a, CTRL e Go to start/end of line ~ C Enter SSH Command Mode C-b, C-f Move backward/forward one character M-b, M-f Move backward/forward by word C-a, C-e Move to the beginning/end of the line C-w, M-d Kill word backward/forward C-d, Backspace Delete char forward/backward C-d may send EOF on an empty line M-. cycle through the argument to the previous commands C-k, C-u Kill (to clipboard) to end of line/beginning of line C-y Yank from kill ring M-y (after C-y) Cycle through kill ring history C-t, M-t Transpose character/word M-u, M-l, M-c Upper, lower, or capitalize forward word C-_, C-x C-u, C-/ Cycle through the undo list Note: C = Ctrl, M = Meta Key/modifier (alt or esc)</description></item><item><title>Copying Files Over a Remote Connection</title><link>http://typdef.com/posts/ssh/copying-files-over-remote/</link><pubDate>Fri, 09 Sep 2022 11:25:00 +0400</pubDate><guid>http://typdef.com/posts/ssh/copying-files-over-remote/</guid><description>SCP SCP, or Secure Copy uses SSH to copy files or directories that you select.
Since scp relies on ssh, it is available on the recent builds of windows (that pack ssh by default), mac and ofcourse linux.
You can even copy files over jump or intermediate connections by specifiying the -o flag, like this:
# To copy myfile.txt to /my/dir directory on your remote host scp -o &amp;#39;ProxyJump your.jump.host&amp;#39; myfile.</description></item><item><title>Laggy SSH-Server connections on Laptops</title><link>http://typdef.com/posts/ssh/laggy-ssh-server-with-iw-powersave/</link><pubDate>Fri, 24 Dec 2021 20:12:56 +0400</pubDate><guid>http://typdef.com/posts/ssh/laggy-ssh-server-with-iw-powersave/</guid><description>When using a laptop as a server, if the SSH connection is laggy, it may be because of a wireless card’s power-saving feature.
You can turn this feature off by issuing the command
iw &amp;lt;devname&amp;gt; set power_save off
You can view the status of iw using the command
iw &amp;lt;devname&amp;gt; get power_save
and the device name &amp;lt;devname&amp;gt; using the command ip a
iw is used to show / manipulate wireless devices and their configuration</description></item><item><title>Multihop SSH</title><link>http://typdef.com/posts/ssh/multihop-ssh/</link><pubDate>Sun, 31 Oct 2021 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/ssh/multihop-ssh/</guid><description>OpenSSH v7.3 onward supports a -J switch and a ProxyJump option, which allow one or more comma-separated jump hosts, so, you can simply do this now:
ssh -J jumpuser1@jumphost1,jumpuser2@jumphost2,...,jumpuserN@jumphostN user@hostbe If you want to bind ports as well, You basically have three possibilities:
Tunnel from localhost to host1:
ssh -L 9999:host2:1234 -N host1 As noted above, the connection from host1 to host2 will not be secured.
Tunnel from localhost to host1 and from host1 to host2:</description></item></channel></rss>