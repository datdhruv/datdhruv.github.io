<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on typdef's Blog</title><link>http://typdef.com/posts/</link><description>Recent content in Posts on typdef's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 05 May 2024 12:00:00 +0200</lastBuildDate><atom:link href="http://typdef.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Why SSH port Forwarding gives you superpowers</title><link>http://typdef.com/posts/ssh/ssh-port-forwarding/</link><pubDate>Wed, 19 May 2021 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/ssh/ssh-port-forwarding/</guid><description>What is Port Forwarding? Port Forwarding allows you to make a port on a computer behave like it is part of some other computer.
Say you are running a website on a computer A, on localhost:8080, you can forward this port to another computer B and then any connection to computer-B:8080 will be tunneled back to computer A.
This was an example of local port forwarding.
You can go the other way round as well, having a website run on computer-B:8080 and tunnel it to the Computer A.</description></item><item><title>Bashrc customizations</title><link>http://typdef.com/posts/cli/bashrc/</link><pubDate>Wed, 01 Mar 2023 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/cli/bashrc/</guid><description>Bash Prompt PS1=$&amp;#39;\[\e[0;1;38;5;111m\]\w \[\e[$(($?==0?92:91))m\]$ \[\e[0m\]&amp;#39; or with a right arrow for supported nerd fonts:
PS1=$&amp;#39;\[\e[0;1;38;5;111m\]\w \[\e[$(($?==0?92:91))m\]\u279c \[\e[0m\]&amp;#39; Directory from home uses a if-else ternary expression $(($?==0?92:91)) that makes the color code 0;91m (red, see color codes) if the last command exits with non-zero, or 0;92m green otherwise. $ prompt Case insensitive autocompletion In order to make bash case-insensitive for to current user:
Run the following shell script in a terminal:</description></item><item><title>Git</title><link>http://typdef.com/posts/git/git/</link><pubDate>Thu, 05 Mar 2020 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/git/git/</guid><description>Some Conventions
repository(repo) -&amp;gt; basically just a folder, which has all your code in it
local repo -&amp;gt; The folder that is On your computer
remote repo -&amp;gt; The folder that is on some git server (or on a server, basically not on your computer)
origin is the git repo, master is the branch of the repo you want to push to.
Before we proceed, please also check the help pages and the man pages for the topics, they go beyond these basics and explaing in more depth</description></item><item><title>Vscode setup</title><link>http://typdef.com/posts/dotfiles/vscode/</link><pubDate>Sun, 05 May 2024 12:00:00 +0200</pubDate><guid>http://typdef.com/posts/dotfiles/vscode/</guid><description>The base config is as follows:
{ &amp;#34;editor.fontSize&amp;#34;: 16, &amp;#34;editor.glyphMargin&amp;#34;: true, &amp;#34;editor.suggest.preview&amp;#34;: true, &amp;#34;editor.minimap.autohide&amp;#34;: true, &amp;#34;editor.cursorBlinking&amp;#34;: &amp;#34;phase&amp;#34;, &amp;#34;editor.wordWrap&amp;#34;: &amp;#34;on&amp;#34;, &amp;#34;files.autoSave&amp;#34;: &amp;#34;afterDelay&amp;#34;, &amp;#34;breadcrumbs.enabled&amp;#34;: false, &amp;#34;telemetry.telemetryLevel&amp;#34;: &amp;#34;off&amp;#34;, &amp;#34;window.autoDetectColorScheme&amp;#34;: true, &amp;#34;editor.suggest.localityBonus&amp;#34;: true, &amp;#34;editor.guides.bracketPairs&amp;#34;: &amp;#34;active&amp;#34;, &amp;#34;editor.fontFamily&amp;#34;: &amp;#34;JetBrainsMono NF Medium&amp;#34;, &amp;#34;window.commandCenter&amp;#34;: false, &amp;#34;workbench.layoutControl.enabled&amp;#34;: false }</description></item><item><title>Change the time zone data on Linux</title><link>http://typdef.com/posts/linux/change-time-zone/</link><pubDate>Fri, 01 Mar 2024 22:45:00 +0400</pubDate><guid>http://typdef.com/posts/linux/change-time-zone/</guid><description>The main step to do here is to configure the tzdata package
Then choose the appropriate timezone info
Ubuntu sudo dpkg-reconfigure tzdata</description></item><item><title>Running oneoff process in the background over ssh</title><link>http://typdef.com/posts/linux/running-procs-bg/</link><pubDate>Mon, 02 Oct 2023 18:30:00 +0400</pubDate><guid>http://typdef.com/posts/linux/running-procs-bg/</guid><description>Imagine a situation where you need to download a large file from the internet to a remote server.
You run curl https://download.com -o download and logout of the ssh server. Big mistake! you come back hours later just to see that the download ended as soon as you logged out.
The nohup command helps here. nohup stands for no hold up, and will run the command without any external interruptions. you can further run the command in the background using &amp;amp;.</description></item><item><title>How does Router know where to forward packet</title><link>http://typdef.com/posts/misc/napt/</link><pubDate>Thu, 17 Aug 2023 22:00:00 +0400</pubDate><guid>http://typdef.com/posts/misc/napt/</guid><description>(mirror copy) The question If several computers with local addresses (192.168.0.#) are connected to a router and each computer opens a web browser and requests a page over HTTP, when these TCP:80 packets are sent out, the router switches the local address with the static IP of the router (i.e. Provider given IP) so the server can reply to the appropriate address.
But how does the router know to which computer to forward the HTTP reply, since the TCP header does not contain the local IP address (does it?</description></item><item><title>Notes on making a Web Scraper in Java</title><link>http://typdef.com/posts/misc/java-webscraping/</link><pubDate>Wed, 05 Jul 2023 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/misc/java-webscraping/</guid><description>First things first. A Web Request Library Before we can start to scrape anything, we will need a way to send and receive web requests. There are multiple ways to do this in java with various libraries, however we will use java.net.http.HttpClient which was released with java 11.
Let&amp;rsquo;s create a simple request:
package org.datdhruv; import java.io.IOException; import java.net.URI; import java.net.http.HttpClient; import java.net.http.HttpRequest; import java.net.http.HttpResponse; public class Main { public static void main(String[] args) throws IOException, InterruptedException { var client = HttpClient.</description></item><item><title>Installing Postgresql on Ubuntu</title><link>http://typdef.com/posts/postgresql/postgresql/</link><pubDate>Sat, 24 Jun 2023 11:30:00 +0400</pubDate><guid>http://typdef.com/posts/postgresql/postgresql/</guid><description>Installing Postgres sudo apt search postgres sudo apt install postgresql sudo apt install postgresql postgresql-contrib sudo systemctl start postgresql.service sudo -i -u postgres sudo -u postgres createuser --interactive sudo -u upskillr psql sudo -u postgres createdb upskillr sudo -u upskillr psql sudo adduser upskillr sudo -u upskillr psql Double and single Quotes in (PG)SQL Double quotes are for names of tables or fields. Sometimes You can omit them. The single quotes are for string constants.</description></item><item><title>Some Postgresql Examples</title><link>http://typdef.com/posts/postgresql/examples/</link><pubDate>Sat, 24 Jun 2023 11:30:00 +0400</pubDate><guid>http://typdef.com/posts/postgresql/examples/</guid><description>jsonb to record select fla.offer_id, ans_data.* from fla, jsonb_to_record(answer_data) as ans_data(&amp;#34;AE46&amp;#34; text,&amp;#34;AE3&amp;#34; text,&amp;#34;AE16&amp;#34; text,&amp;#34;AE45&amp;#34; date,&amp;#34;AE47&amp;#34; date,&amp;#34;AE55&amp;#34; text,&amp;#34;AE60&amp;#34; text,&amp;#34;AE61&amp;#34; text,&amp;#34;AE73&amp;#34; date,&amp;#34;AE74&amp;#34; date,&amp;#34;AE62&amp;#34; text,&amp;#34;AE27&amp;#34; text,&amp;#34;AE42&amp;#34; text,&amp;#34;AE58&amp;#34; text,&amp;#34;AE25&amp;#34; text,&amp;#34;AE54&amp;#34; text,&amp;#34;AE44&amp;#34; text,&amp;#34;AE17&amp;#34; text,&amp;#34;AE53&amp;#34; text,&amp;#34;AE59&amp;#34; text,&amp;#34;AE19&amp;#34; text,&amp;#34;AE56&amp;#34; text,&amp;#34;AE21&amp;#34; text,&amp;#34;AE57&amp;#34; text,&amp;#34;AE33&amp;#34; text,&amp;#34;AE32&amp;#34; text,&amp;#34;AE41&amp;#34; date,&amp;#34;AE31&amp;#34; date,&amp;#34;AE65&amp;#34; text,&amp;#34;AE66&amp;#34; text,&amp;#34;AE67&amp;#34; text,&amp;#34;AE72&amp;#34; text,&amp;#34;AE52&amp;#34; text,&amp;#34;AE38&amp;#34; text,&amp;#34;AE69&amp;#34; text,&amp;#34;AE70&amp;#34; text,&amp;#34;AE68&amp;#34; text,&amp;#34;AE71&amp;#34; text,&amp;#34;AE39&amp;#34; text); Accessing record&amp;rsquo;s key and values select offer_id, rev, bf.key as business_field, bf.value as business_field_comments from table_name tn, jsonb_each_text((tn.answer_data-&amp;gt;&amp;gt;&amp;#39;FI5&amp;#39;)::jsonb) as bf; JSON String agg -- Data is stored as text within a json.</description></item><item><title>Linux Filesystem Hierarchy</title><link>http://typdef.com/posts/linux/man-hier/</link><pubDate>Mon, 12 Jun 2023 21:00:00 +0400</pubDate><guid>http://typdef.com/posts/linux/man-hier/</guid><description>It is often tough to know where certain kinds of files or applications are in the Linux files system.
It is complicated due to historical reasons, and different distributions often put their files in different locations.
A good way to know where things are, or where things go, is by referring to your distribution&amp;rsquo;s man pages.
man hier</description></item><item><title>Find Patterns in a directory with grep</title><link>http://typdef.com/posts/cli/recursive-grep/</link><pubDate>Fri, 26 May 2023 22:30:00 +0400</pubDate><guid>http://typdef.com/posts/cli/recursive-grep/</guid><description>Recently I had to lookup a usage for function in a project I was working on.
This is relatively an easy task with vscode. You just open the search in files menu, type what you are looking for, and off you go.
This made me wonder, how would you achieve this task in the command line with something like grep?
There is an amazing tool which specializes in this activity: ripgrep, however I was determined to complete this task with just grep.</description></item><item><title>Get a Brief of Ip command (with Color)</title><link>http://typdef.com/posts/cli/ip-brief-output/</link><pubDate>Sun, 25 Dec 2022 11:25:00 +0400</pubDate><guid>http://typdef.com/posts/cli/ip-brief-output/</guid><description>The default ip addr command, which gives you ip address of your device, is cluttered with alot of values, which may not be useful to you. To quickly get the output, you can pass the -br or --brief argument, which outputs a brief of the network statistic.
Additionally you can get color output by passing the -c or --color argument.</description></item><item><title>Useful Shell Shortcuts</title><link>http://typdef.com/posts/cli/bash-shell-shortcuts/</link><pubDate>Wed, 26 Oct 2022 12:30:00 +0400</pubDate><guid>http://typdef.com/posts/cli/bash-shell-shortcuts/</guid><description>Key Binding Description ESC f, ESC b Go forward/backword one word CTRL a, CTRL e Go to start/end of line ~ C Enter SSH Command Mode C-b, C-f Move backward/forward one character M-b, M-f Move backward/forward by word C-a, C-e Move to the beginning/end of the line C-w, M-d Kill word backward/forward C-d, Backspace Delete char forward/backward C-d may send EOF on an empty line M-. cycle through the argument to the previous commands C-k, C-u Kill (to clipboard) to end of line/beginning of line C-y Yank from kill ring M-y (after C-y) Cycle through kill ring history C-t, M-t Transpose character/word M-u, M-l, M-c Upper, lower, or capitalize forward word C-_, C-x C-u, C-/ Cycle through the undo list Note: C = Ctrl, M = Meta Key/modifier (alt or esc)</description></item><item><title>Copying Files Over a Remote Connection</title><link>http://typdef.com/posts/ssh/copying-files-over-remote/</link><pubDate>Fri, 09 Sep 2022 11:25:00 +0400</pubDate><guid>http://typdef.com/posts/ssh/copying-files-over-remote/</guid><description>SCP SCP, or Secure Copy uses SSH to copy files or directories that you select.
Since scp relies on ssh, it is available on the recent builds of windows (that pack ssh by default), mac and ofcourse linux.
You can even copy files over jump or intermediate connections by specifiying the -o flag, like this:
# To copy myfile.txt to /my/dir directory on your remote host scp -o &amp;#39;ProxyJump your.jump.host&amp;#39; myfile.</description></item><item><title>A list of (unix) environment variables on your system</title><link>http://typdef.com/posts/linux/environ-variables/</link><pubDate>Sun, 14 Aug 2022 22:20:00 +0400</pubDate><guid>http://typdef.com/posts/linux/environ-variables/</guid><description>On Linux, man 7 environ describes a number of common environment variables, and gives references to other man pages which describe them in more detail. Equivalents exist on other systems; see for example the FreeBSD version. (Historically, Unix V7 had an equivalent in section 5; the BSDs have had this in section 7 since at least BSD4.3.)
In general, to look through all the man pages which mention a given environment variable, you can use man -K, which runs a full-text search in all the installed man pages’ sources, with the -w and -i options (which respectively list man pages instead of viewing them, and match the strings’ case):</description></item><item><title>Notes on System Design</title><link>http://typdef.com/posts/misc/system-design/</link><pubDate>Thu, 11 Aug 2022 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/misc/system-design/</guid><description>1. Design for Moore&amp;rsquo;s Law Moore&amp;rsquo;s Law imageThe one constant for computer designers is rapid change, which is driven largely by Moore&amp;rsquo;s Law. It states that integrated circuit resources double every 18–24 months. Moore&amp;rsquo;s Law resulted from a 1965 prediction of such growth in IC capacity made by Gordon Moore, one of the founders of Intel. As computer designs can take years, the resources available per chip can easily double or quadruple between the start and finish of the project.</description></item><item><title>Getting a command from Shell History, Fast</title><link>http://typdef.com/posts/cli/reverse-shell-search/</link><pubDate>Thu, 10 Mar 2022 12:16:00 +0400</pubDate><guid>http://typdef.com/posts/cli/reverse-shell-search/</guid><description>To quickly search through, or re-run one of the previously run command, especially if it is a long one, instead of searching the .hist file, you can just type ctrl r and that will bring up a reverse/back search prompt where it will try to autocomplete the previously run command.
The command search from most recently used first, so if the first suggestion is not the command you want, you can keep going back and searching by repeatedly typing ctrl r</description></item><item><title>Onefetch</title><link>http://typdef.com/posts/cli/onefetch/</link><pubDate>Wed, 19 Jan 2022 00:52:00 +0400</pubDate><guid>http://typdef.com/posts/cli/onefetch/</guid><description>Onefetch is a command-line Git information tool written in Rust that displays project information and code statistics for a local Git repository directly on your terminal. The tool is completely offline - no network access is required.
By default, the repo&amp;rsquo;s information is displayed alongside the dominant language&amp;rsquo;s logo, but you can further configure onefetch to instead use an image - on supported terminals -, a text input or nothing at all.</description></item><item><title>ZSH Shenanigans</title><link>http://typdef.com/posts/cli/zsh-shenanigans/</link><pubDate>Wed, 05 Jan 2022 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/cli/zsh-shenanigans/</guid><description>Aliases Python Aliases alias pip=&amp;#39;python3 -m pip&amp;#39; alias python=&amp;#39;python3&amp;#39; alias py=&amp;#39;python3&amp;#39; ls Alias Because ls does not automagically add color
alias ls=&amp;#39;ls --color&amp;#39; Prompt customization checkout the sourcefile for more, here I am going to detail the customization that I add.
export PROMPT=$&amp;#39;%F{green}%B%n%b%f %F{111}%3~%f %(?.%F{green}\U279c%f.%F{009}\U279c%f) &amp;#39; $ : Required for unicode parsing %F&amp;hellip;.%f is for setting Foreground colors, colors specified in {color/color_code} format %B&amp;hellip;.%b for bold text %n for username %m for machine name (condensed) %~ for pwd, but with $HOME prefix, 3 for the number of parent dirs to show alternatively use %d or %/ for full paths \U0000 for unicode %(?</description></item><item><title>Download files with curl</title><link>http://typdef.com/posts/cli/download-files-with-curl/</link><pubDate>Sun, 26 Dec 2021 20:48:00 +0400</pubDate><guid>http://typdef.com/posts/cli/download-files-with-curl/</guid><description>You can download files with curl, just like with wget, using the flag -O
The capital -O outputs the file name to be as the same name as the one on the server, but you can also use -o (small o), to name the files as you want, like curl -o filename link-to-file
These flags are important, because otherwise, curl will dump the output to stdout.</description></item><item><title>Laggy SSH-Server connections on Laptops</title><link>http://typdef.com/posts/ssh/laggy-ssh-server-with-iw-powersave/</link><pubDate>Fri, 24 Dec 2021 20:12:56 +0400</pubDate><guid>http://typdef.com/posts/ssh/laggy-ssh-server-with-iw-powersave/</guid><description>When using a laptop as a server, if the SSH connection is laggy, it may be because of a wireless card’s power-saving feature.
You can turn this feature off by issuing the command
iw &amp;lt;devname&amp;gt; set power_save off
You can view the status of iw using the command
iw &amp;lt;devname&amp;gt; get power_save
and the device name &amp;lt;devname&amp;gt; using the command ip a
iw is used to show / manipulate wireless devices and their configuration</description></item><item><title>Linux as a Backend</title><link>http://typdef.com/posts/linux/linux-as-backend/</link><pubDate>Thu, 02 Dec 2021 22:15:00 +0400</pubDate><guid>http://typdef.com/posts/linux/linux-as-backend/</guid><description>After accessing the linux server in the creative lab and then setting up my blog site on a VBox VM, using port-binding, I have started to feel like using whatever Desktop OS (Windows/MacOS/Linux) is just fine.
Why SSH Port Forwarding gives you Superpowers
Most of the usage of this kind of work will be via the terminal itself.
I am however still struggling with how to use desktop linux, so as to be that one guy who propogates Linux use on the desktop.</description></item><item><title>Forget git history</title><link>http://typdef.com/posts/git/forget-git-hist/</link><pubDate>Mon, 29 Nov 2021 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/git/forget-git-hist/</guid><description>To remove the git history git checkout --orphan tmp # create a temporary branch git add -A # Add all files and commit them git commit -m &amp;#39;Add files&amp;#39; git branch -D main # Deletes the master branch git branch -m main # Rename the current branch to master git push -f origin main # Force push master branch to Git server</description></item><item><title>Git Credential Manager</title><link>http://typdef.com/posts/git/git-credential-manager/</link><pubDate>Fri, 26 Nov 2021 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/git/git-credential-manager/</guid><description>Github removed the https login with username password to push/pull code.
Now you have to generate a personal access token and use that token instead of the password for those operations.
This brings us to git credential manger, you can save the username and password (or the personal access token) with git for https logins, so that you dont have to input it again and again.
You can do this with</description></item><item><title>./ in Linux</title><link>http://typdef.com/posts/linux/dotslash-linux/</link><pubDate>Mon, 01 Nov 2021 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/linux/dotslash-linux/</guid><description>So, why exactly does ./executable work in Linux and Unix (and .\ in windows)?
The ./ translates to: in the current directory (dot(.) : this, slash(/) : directory)
Now recall that there is a variable called $PATH in all operating system shells.
The role of this variable is to store the path to all the places where system binaries are stored (for eg in /bin or /usr/bin or /sbin)
Also remember that shells can then take these binaries as inputs and directly run them like</description></item><item><title>Multihop SSH</title><link>http://typdef.com/posts/ssh/multihop-ssh/</link><pubDate>Sun, 31 Oct 2021 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/ssh/multihop-ssh/</guid><description>OpenSSH v7.3 onward supports a -J switch and a ProxyJump option, which allow one or more comma-separated jump hosts, so, you can simply do this now:
ssh -J jumpuser1@jumphost1,jumpuser2@jumphost2,...,jumpuserN@jumphostN user@hostbe If you want to bind ports as well, You basically have three possibilities:
Tunnel from localhost to host1:
ssh -L 9999:host2:1234 -N host1 As noted above, the connection from host1 to host2 will not be secured.
Tunnel from localhost to host1 and from host1 to host2:</description></item><item><title>Python tools</title><link>http://typdef.com/posts/python/python-tooling/</link><pubDate>Tue, 05 Jan 2021 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/python/python-tooling/</guid><description>Index pydoc Pip Setuptools json.tool argparse pyinstaller Note on python packages kivy Preferred LSP pydoc To get help with used defined functions and classes, just run pydoc
eg:
# foo.py def bar(): &amp;#34;&amp;#34;&amp;#34;this is the docstring for bar()&amp;#34;&amp;#34;&amp;#34; print &amp;#39;hello&amp;#39; def baz(): &amp;#34;&amp;#34;&amp;#34;this is the docstring for baz()&amp;#34;&amp;#34;&amp;#34; print &amp;#39;world&amp;#39; After Running pydoc:
$ pydoc foo # Note do not include the .py extention Help on module foo: NAME foo FILE /path/to/foo.</description></item><item><title>Python Sockets</title><link>http://typdef.com/posts/python/python-network-sockets/</link><pubDate>Tue, 11 Aug 2020 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/python/python-network-sockets/</guid><description>Network Sockets Server side import socket import threading HEADER = 64 # Choose a port PORT = 5050 FORMAT = &amp;#39;utf-8&amp;#39; DISCONNECT_MESSAGE = &amp;#34;!DISCONNECT&amp;#34; # Check your ip address using ifconfig/ipconfig/ip addr # SERVER = &amp;#34;192.168.1.114&amp;#34; # To get based on dynamic hostname # SERVER = socket.gethostbyname(socket.gethostname()) # Symbolic empty string signifies all availiable interfaces SERVER = &amp;#39;&amp;#39; ADDR = (SERVER, PORT) # What kind of address are we going to look for in the connections # SOCK_Stream: Streaming data over the socket server = socket.</description></item><item><title>Intermediate Python Concepts</title><link>http://typdef.com/posts/python/python-concepts/</link><pubDate>Wed, 05 Aug 2020 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/python/python-concepts/</guid><description>Classes and objects creating and using classes class circle(object): def __init__(self,radius,color): self.radius = radius self.color = color RedCircle = circle(10,&amp;#34;Red&amp;#34;) Methods are functions which operate on the class instances class rectangle(object): def __init__(self, height, width, color): self.height = height self.width = width self.color = color def add_height(self,h): self.height = self.height + h return(self.radius) List Comprehension my_function = lambda a, b, c : a + b my_function(1, 2, 3)</description></item><item><title>Python OOPS Concepts</title><link>http://typdef.com/posts/python/python-oop/</link><pubDate>Sun, 05 Jan 2020 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/python/python-oop/</guid><description>self =&amp;gt; instances -&amp;gt; methods taking this as the first arguement work on instances
cls =&amp;gt; classes -&amp;gt; work on the entire class rather than an instance
both of them are context-aware
when working with classes, unlike regular methods that take instances as the first arguemnt and unlike class methods that take classes as the first argument, static methods take no arguments
Object Oriented Concepts with Python to declare a class in python you use the class keyword, if at all you want the class to be empty, you can use the pass keyword</description></item><item><title>Regex concepts</title><link>http://typdef.com/posts/misc/regex-concepts/</link><pubDate>Sun, 05 Jan 2020 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/misc/regex-concepts/</guid><description>Regex Concepts To escape characters you need to use \ escape characters, for eg if you want to search for a &amp;ldquo;?&amp;rdquo; or &amp;ldquo;.&amp;rdquo; or &amp;ldquo;&amp;quot;, use backslash \., \?, \\. If you want to search for an email address eg: name@example.com, use: name@example\.com
. -&amp;gt; matches any character except newline character
\d matches digits (anything from 0-9)
\D matches anything BUT a digit
\w searches for any alphanumeric character (a-z,A-Z,0-9)</description></item><item><title>Installing kali linux on Raspberry pi when you have no monitor</title><link>http://typdef.com/posts/misc/rpi-headless-install/</link><pubDate>Wed, 25 Dec 2019 12:00:00 +0400</pubDate><guid>http://typdef.com/posts/misc/rpi-headless-install/</guid><description>Installing Kali linux on Raspberry Pi Flash the image on to the sd card (I recommend using balena etcher) Before putting the SD card into the pi, in the boot folder, create a ssh file (just touch ssh in the boot folder) now come the more tricky part. connect the pi to the router (with a wire) and then ssh into it. use nmtui to to set up the network now you have to enable ssh at each subsequent boot.</description></item><item><title/><link>http://typdef.com/posts/dotfiles/linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://typdef.com/posts/dotfiles/linux/</guid><description>Linux Better font rendering on Linux Set Anti Aliasing to Subpixel and Hinting to Slight
Gnome &amp;amp; monitor colors Change the monitor color to sRGB
Setting up chromium based browsers You can set up your own color scheme using the profiles setting. Use that to match whatever is the primary window color of the theme.
Setting up Desktop Entrys [Desktop Entry] Name=Appllication Name Exec=/home/mrPeterson/path_to_executable StartupNotify=true Terminal=false Type=Application Icon=/optional/path/to/icon.png</description></item><item><title/><link>http://typdef.com/posts/dotfiles/terminal-font/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://typdef.com/posts/dotfiles/terminal-font/</guid><description>Terminal font JetBrainsMonoNerdFontPropo-Medium Meslo Nerd Font FiraCode Nerd Font Meslo (Apple only) Ubuntu/Mono</description></item><item><title/><link>http://typdef.com/posts/dotfiles/vscode/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://typdef.com/posts/dotfiles/vscode/readme/</guid><description>Colorscheme Bear Theme
Bearded Theme
Edge
Github Theme
GruvBox Material Theme
Extentions Error Lens for inline error highlighting.
Thunder Client as a lightweight postman alternative.
Most Important Settings &amp;#34;editor.suggest.preview&amp;#34;: true, &amp;#34;editor.minimap.autohide&amp;#34;: true, &amp;#34;editor.cursorBlinking&amp;#34;: &amp;#34;phase&amp;#34;, &amp;#34;editor.wordWrap&amp;#34;: &amp;#34;on&amp;#34;, &amp;#34;workbench.activityBar.location&amp;#34;: &amp;#34;top&amp;#34;, &amp;#34;window.autoDetectColorScheme&amp;#34;: true, &amp;#34;editor.suggest.localityBonus&amp;#34;: true Reseting Pane sizes (of sidebar and terminal) Move the cursor till the option to resize comes up, and then just double click! and it will resize!
Learnt from here</description></item><item><title/><link>http://typdef.com/posts/dotfiles/windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://typdef.com/posts/dotfiles/windows/</guid><description/></item></channel></rss>